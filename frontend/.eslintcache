[{"C:\\Users\\Allen\\Desktop\\lolstatsapp\\frontend\\src\\index.js":"1","C:\\Users\\Allen\\Desktop\\lolstatsapp\\frontend\\src\\App.js":"2","C:\\Users\\Allen\\Desktop\\lolstatsapp\\frontend\\src\\components\\matchHistory.js":"3","C:\\Users\\Allen\\Desktop\\lolstatsapp\\frontend\\src\\components\\match.js":"4"},{"size":218,"mtime":1608972683489,"results":"5","hashOfConfig":"6"},{"size":337,"mtime":1608973044660,"results":"7","hashOfConfig":"6"},{"size":3551,"mtime":1608977353162,"results":"8","hashOfConfig":"6"},{"size":11123,"mtime":1608974846314,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1v3jqxz",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"C:\\Users\\Allen\\Desktop\\lolstatsapp\\frontend\\src\\index.js",[],["20","21"],"C:\\Users\\Allen\\Desktop\\lolstatsapp\\frontend\\src\\App.js",[],"C:\\Users\\Allen\\Desktop\\lolstatsapp\\frontend\\src\\components\\matchHistory.js",["22"],"C:\\Users\\Allen\\Desktop\\lolstatsapp\\frontend\\src\\components\\match.js",["23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39"],"import React from 'react';\r\nimport './match.css';\r\nimport {FaAngleDown} from 'react-icons/fa';\r\n\r\nimport Precision from './images/runes/Precision.png'\r\nimport Conqueror from './images/runes/Conqueror.png';\r\nimport FleetFootwork from './images/runes/FleetFootwork.png';\r\nimport LethalTempo from './images/runes/LethalTempoTemp.png';\r\nimport PressTheAttack from './images/runes/PressTheAttack.png';\r\n\r\nimport Sorcery from './images/runes/Sorcery.png';\r\nimport ArcaneComet from './images/runes/ArcaneComet.png';\r\nimport PhaseRush from './images/runes/PhaseRush.png';\r\nimport SummonAery from './images/runes/SummonAery.png';\r\n\r\nimport Resolve from './images/runes/Resolve.png'\r\nimport GraspOfTheUndying from './images/runes/GraspOfTheUndying.png';\r\nimport AfterShock from './images/runes/AfterShock.png';\r\nimport Guardian from './images/runes/Guardian.png';\r\n\r\nimport Inspiration from './images/runes/Inspiration.png';\r\nimport GlacialAugment from './images/runes/GlacialAugment.png';\r\nimport UnsealedSpellbook from './images/runes/UnsealedSpellbook.png';\r\nimport MasterKey from './images/runes/MasterKey.png';\r\n\r\nimport Domination from './images/runes/Domination.png';\r\nimport Electrocute from './images/runes/Electrocute.png';\r\nimport HailOfBlades from './images/runes/HailOfBlades.png';\r\nimport Predator from './images/runes/Predator.png';\r\nimport DarkHarvest from './images/runes/Predator.png';\r\n\r\nclass Match extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            playerName: this.props.playerName.name,\r\n            backgroundColor: this.props.data.win,\r\n            buttonBackgroundColor: 'showFullMatchInfoContainer' + this.props.data.win, \r\n            buttonColor: (this.props.data.win === 'Victory' ? 'royalblue' : 'crimson'),\r\n            winOrLose: 'text' + this.props.data.win\r\n        }\r\n    }\r\n\r\n    findRuneImage(imageName) {\r\n        const runes = {\r\n            Domination: Domination,\r\n            Electrocute: Electrocute,\r\n            \"Hail of Blades\": HailOfBlades,\r\n            Predator: Predator,\r\n            \"Dark Harvest\": DarkHarvest,\r\n            Precision: Precision,\r\n            Conqueror: Conqueror,\r\n            \"Fleet Footwork\": FleetFootwork,\r\n            \"Lethal Tempo\": LethalTempo,\r\n            \"Press the Attack\": PressTheAttack,\r\n            Sorcery: Sorcery,\r\n            \"Phase Rush\": PhaseRush,\r\n            \"Arcane Comet\": ArcaneComet,\r\n            \"Summon Aery\": SummonAery,\r\n            Resolve: Resolve,\r\n            \"Grasp of the Undying\": GraspOfTheUndying,\r\n            Aftershock: AfterShock,\r\n            Guardian: Guardian,\r\n            Inspiration: Inspiration,\r\n            \"Glacial Augment\": GlacialAugment,\r\n            \"Unsealed Spellbook\": UnsealedSpellbook,\r\n            MasterKey: MasterKey\r\n        }\r\n        return runes[imageName];\r\n    }\r\n\r\n    findChampionIcon(championName) {\r\n        return 'http://ddragon.leagueoflegends.com/cdn/10.19.1/img/champion/' + championName + '.png'\r\n    }\r\n\r\n    findSummonerSpell(summonerName) {\r\n        return 'http://ddragon.leagueoflegends.com/cdn/10.19.1/img/spell/' + summonerName + '.png'\r\n    }\r\n\r\n    findItem(itemId) {\r\n        return 'http://ddragon.leagueoflegends.com/cdn/10.19.1/img/item/'+ itemId + '.png'\r\n    }\r\n\r\n    returnItem(itemNumber, className) {\r\n        const item = this.props.data.players[this.state.playerName].items[itemNumber];\r\n        if (item !== 0) {\r\n            return <img src={this.findItem(item)} className={className}/>\r\n        } else {\r\n            return <div className='emptyItem'></div>\r\n        }\r\n    }\r\n    \r\n    returnTeam(teamNumber) {\r\n        const team = [];\r\n        for (let p in this.props.data.players) {\r\n            if (this.props.data.players[p].team == teamNumber) {\r\n                team.push(this.props.data.players[p])\r\n            }\r\n        }\r\n        return team;\r\n    }\r\n\r\n    returnPlayers() {\r\n        const teamOne = this.returnTeam(100);\r\n        const teamTwo = this.returnTeam(200);\r\n        return (\r\n            <div className='playersContainer'>\r\n                <div className='teamContainer'>\r\n                    <div className='player'>\r\n                        <img src={this.findChampionIcon(teamOne[0].champion)} className='miniChampionIcon'/>\r\n                        <div className='playerName'>\r\n                            {teamOne[0].player}\r\n                        </div>\r\n                    </div>\r\n                    <div className='player'>\r\n                        <img src={this.findChampionIcon(teamOne[1].champion)} className='miniChampionIcon'/>\r\n                        <div className='playerName'>\r\n                            {teamOne[1].player}\r\n                        </div>\r\n                    </div>\r\n                    <div className='player'>\r\n                        <img src={this.findChampionIcon(teamOne[2].champion)} className='miniChampionIcon'/>\r\n                        <div className='playerName'>\r\n                            {teamOne[2].player}\r\n                        </div>\r\n                    </div>\r\n                    <div className='player'>\r\n                        <img src={this.findChampionIcon(teamOne[3].champion)} className='miniChampionIcon'/>\r\n                        <div className='playerName'>\r\n                            {teamOne[3].player}\r\n                        </div>\r\n                    </div>\r\n                    <div className='player'>\r\n                        <img src={this.findChampionIcon(teamOne[4].champion)} className='miniChampionIcon'/>\r\n                        <div className='playerName'>\r\n                            {teamOne[4].player}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='teamContainer'>\r\n                    <div className='player'>\r\n                        <img src={this.findChampionIcon(teamTwo[0].champion)} className='miniChampionIcon'/>\r\n                        <div className='playerName'>\r\n                            {teamTwo[0].player}\r\n                        </div>\r\n                    </div>\r\n                    <div className='player'>\r\n                        <img src={this.findChampionIcon(teamTwo[1].champion)} className='miniChampionIcon'/>\r\n                        <div className='playerName'>\r\n                            {teamTwo[1].player}\r\n                        </div>\r\n                    </div>\r\n                    <div className='player'>\r\n                        <img src={this.findChampionIcon(teamTwo[2].champion)} className='miniChampionIcon'/>\r\n                        <div className='playerName'>\r\n                            {teamTwo[2].player}\r\n                        </div>\r\n                    </div>\r\n                    <div className='player'>\r\n                        <img src={this.findChampionIcon(teamTwo[3].champion)} className='miniChampionIcon'/>\r\n                        <div className='playerName'>\r\n                            {teamTwo[3].player}\r\n                        </div>\r\n                    </div>\r\n                    <div className='player'>\r\n                        <img src={this.findChampionIcon(teamTwo[4].champion)} className='miniChampionIcon'/>\r\n                        <div className='playerName'>\r\n                            {teamTwo[4].player}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.backgroundColor} background-color='black'>\r\n                <div className='time'>\r\n                    <div className='queueType'>{this.props.data.gameType}</div>\r\n                    <div className='timeAgo'>{this.props.data.daysAgo}</div>\r\n                    <div className={this.state.winOrLose}>{this.props.data.win}</div>\r\n                    <div className='gameLength'>{this.props.data.gameDuration.minutes}m {this.props.data.gameDuration.seconds}s</div>\r\n                </div>\r\n                <div className='championIcon'>\r\n                    <img src={this.findChampionIcon(this.props.data.players[this.state.playerName].champion)} className='championIconImg'/>\r\n                    <div className='championName'>{this.props.data.players[this.state.playerName].champion}</div>\r\n                </div>\r\n                <div className='summonerSpellsAndRunes'>\r\n                    <div className='spellOrRuneSet'>\r\n                        <img src={this.findSummonerSpell(this.props.data.players[this.state.playerName].summonerSpells.spell1)} className='summonerSpell'/>\r\n                        <img src={this.findSummonerSpell(this.props.data.players[this.state.playerName].summonerSpells.spell2)} className='summonerSpell'/>\r\n                    </div>\r\n                    <div className='spellOrRuneSet'>\r\n                        <img src={this.findRuneImage(this.props.data.players[this.state.playerName].runes.primaryRune)} className='topRune'/>\r\n                        <img src={this.findRuneImage(this.props.data.players[this.state.playerName].runes.secondaryRune)} className='bottomRune'/>\r\n                    </div>\r\n                </div>\r\n                <div className='kdaContainer'>\r\n                    <div className='killsDeathsAssists'>{this.props.data.players[this.state.playerName].kda.kills} / {this.props.data.players[this.state.playerName].kda.deaths} / {this.props.data.players[this.state.playerName].kda.assists}</div>\r\n                    <div className='kda'>{this.props.data.players[this.state.playerName].kda.kda} KDA</div>\r\n                </div>\r\n                <div className='levelCSKPContainer'>\r\n                    <div className='levelCSKP'>Level {this.props.data.players[this.state.playerName].championLevel}</div>\r\n                    <div className='levelCSKP'>{this.props.data.players[this.state.playerName].cs.totalCS} ({this.props.data.players[this.state.playerName].cs.cspm}) CS</div>\r\n                    <div className='levelCSKP'>Kill P: {this.props.data.killParticipation}%</div>\r\n                </div>\r\n                <div className='itemContainer'>\r\n                    {this.returnItem('item1', 'item1-4')}\r\n                    {this.returnItem('item2', 'item1-4')}\r\n                    {this.returnItem('item3', 'item1-4')}\r\n                    {this.returnItem('item7', 'item1-4')}\r\n                    {this.returnItem('item4', 'item5-7')}\r\n                    {this.returnItem('item5', 'item5-7')}\r\n                    {this.returnItem('item6', 'item5-7')}\r\n                    <div className='wards'>Wards: {this.props.data.players[this.state.playerName].wards}</div>\r\n                </div>\r\n                <div>\r\n                    {this.returnPlayers()}\r\n                </div>\r\n                <div className={this.state.buttonBackgroundColor}>\r\n                    <button className='showFullMatchInfoButton'>\r\n                        <FaAngleDown size='20' color={this.state.buttonColor}/>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Match;",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":61,"column":17,"nodeType":"46","endLine":61,"endColumn":108},{"ruleId":"44","severity":1,"message":"45","line":87,"column":20,"nodeType":"46","endLine":87,"endColumn":74},{"ruleId":"47","severity":1,"message":"48","line":96,"column":49,"nodeType":"49","messageId":"50","endLine":96,"endColumn":51},{"ruleId":"44","severity":1,"message":"45","line":110,"column":25,"nodeType":"46","endLine":110,"endColumn":109},{"ruleId":"44","severity":1,"message":"45","line":116,"column":25,"nodeType":"46","endLine":116,"endColumn":109},{"ruleId":"44","severity":1,"message":"45","line":122,"column":25,"nodeType":"46","endLine":122,"endColumn":109},{"ruleId":"44","severity":1,"message":"45","line":128,"column":25,"nodeType":"46","endLine":128,"endColumn":109},{"ruleId":"44","severity":1,"message":"45","line":134,"column":25,"nodeType":"46","endLine":134,"endColumn":109},{"ruleId":"44","severity":1,"message":"45","line":142,"column":25,"nodeType":"46","endLine":142,"endColumn":109},{"ruleId":"44","severity":1,"message":"45","line":148,"column":25,"nodeType":"46","endLine":148,"endColumn":109},{"ruleId":"44","severity":1,"message":"45","line":154,"column":25,"nodeType":"46","endLine":154,"endColumn":109},{"ruleId":"44","severity":1,"message":"45","line":160,"column":25,"nodeType":"46","endLine":160,"endColumn":109},{"ruleId":"44","severity":1,"message":"45","line":166,"column":25,"nodeType":"46","endLine":166,"endColumn":109},{"ruleId":"44","severity":1,"message":"45","line":186,"column":21,"nodeType":"46","endLine":186,"endColumn":140},{"ruleId":"44","severity":1,"message":"45","line":191,"column":25,"nodeType":"46","endLine":191,"endColumn":156},{"ruleId":"44","severity":1,"message":"45","line":192,"column":25,"nodeType":"46","endLine":192,"endColumn":156},{"ruleId":"44","severity":1,"message":"45","line":195,"column":25,"nodeType":"46","endLine":195,"endColumn":142},{"ruleId":"44","severity":1,"message":"45","line":196,"column":25,"nodeType":"46","endLine":196,"endColumn":147},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]